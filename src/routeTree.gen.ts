/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as appExploreIndexRouteImport } from './routes/(app)/explore/index'
import { Route as appChatsIndexRouteImport } from './routes/(app)/chats/index'
import { Route as appusersUsernameIndexRouteImport } from './routes/(app)/(users)/$username/index'
import { Route as appusersUsernameExperienceRouteImport } from './routes/(app)/(users)/$username/experience'
import { Route as appusersUsernameArticlesRouteImport } from './routes/(app)/(users)/$username/articles'
import { Route as appusersUsernameConnectionsRouteRouteImport } from './routes/(app)/(users)/$username/connections/route'
import { Route as appusersUsernameProjectsIndexRouteImport } from './routes/(app)/(users)/$username/projects/index'
import { Route as appusersUsernameProjectsProjectIdRouteImport } from './routes/(app)/(users)/$username/projects/$projectId'
import { Route as appusersUsernameConnectionsFollowingRouteImport } from './routes/(app)/(users)/$username/connections/following'
import { Route as appusersUsernameConnectionsFollowersRouteImport } from './routes/(app)/(users)/$username/connections/followers'

const appIndexRoute = appIndexRouteImport.update({
  id: '/(app)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const appExploreIndexRoute = appExploreIndexRouteImport.update({
  id: '/(app)/explore/',
  path: '/explore/',
  getParentRoute: () => rootRouteImport,
} as any)
const appChatsIndexRoute = appChatsIndexRouteImport.update({
  id: '/(app)/chats/',
  path: '/chats/',
  getParentRoute: () => rootRouteImport,
} as any)
const appusersUsernameIndexRoute = appusersUsernameIndexRouteImport.update({
  id: '/(app)/(users)/$username/',
  path: '/$username/',
  getParentRoute: () => rootRouteImport,
} as any)
const appusersUsernameExperienceRoute =
  appusersUsernameExperienceRouteImport.update({
    id: '/(app)/(users)/$username/experience',
    path: '/$username/experience',
    getParentRoute: () => rootRouteImport,
  } as any)
const appusersUsernameArticlesRoute =
  appusersUsernameArticlesRouteImport.update({
    id: '/(app)/(users)/$username/articles',
    path: '/$username/articles',
    getParentRoute: () => rootRouteImport,
  } as any)
const appusersUsernameConnectionsRouteRoute =
  appusersUsernameConnectionsRouteRouteImport.update({
    id: '/(app)/(users)/$username/connections',
    path: '/$username/connections',
    getParentRoute: () => rootRouteImport,
  } as any)
const appusersUsernameProjectsIndexRoute =
  appusersUsernameProjectsIndexRouteImport.update({
    id: '/(app)/(users)/$username/projects/',
    path: '/$username/projects/',
    getParentRoute: () => rootRouteImport,
  } as any)
const appusersUsernameProjectsProjectIdRoute =
  appusersUsernameProjectsProjectIdRouteImport.update({
    id: '/(app)/(users)/$username/projects/$projectId',
    path: '/$username/projects/$projectId',
    getParentRoute: () => rootRouteImport,
  } as any)
const appusersUsernameConnectionsFollowingRoute =
  appusersUsernameConnectionsFollowingRouteImport.update({
    id: '/following',
    path: '/following',
    getParentRoute: () => appusersUsernameConnectionsRouteRoute,
  } as any)
const appusersUsernameConnectionsFollowersRoute =
  appusersUsernameConnectionsFollowersRouteImport.update({
    id: '/followers',
    path: '/followers',
    getParentRoute: () => appusersUsernameConnectionsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof authLoginRoute
  '/': typeof appIndexRoute
  '/chats': typeof appChatsIndexRoute
  '/explore': typeof appExploreIndexRoute
  '/$username/connections': typeof appusersUsernameConnectionsRouteRouteWithChildren
  '/$username/articles': typeof appusersUsernameArticlesRoute
  '/$username/experience': typeof appusersUsernameExperienceRoute
  '/$username': typeof appusersUsernameIndexRoute
  '/$username/connections/followers': typeof appusersUsernameConnectionsFollowersRoute
  '/$username/connections/following': typeof appusersUsernameConnectionsFollowingRoute
  '/$username/projects/$projectId': typeof appusersUsernameProjectsProjectIdRoute
  '/$username/projects': typeof appusersUsernameProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/': typeof appIndexRoute
  '/chats': typeof appChatsIndexRoute
  '/explore': typeof appExploreIndexRoute
  '/$username/connections': typeof appusersUsernameConnectionsRouteRouteWithChildren
  '/$username/articles': typeof appusersUsernameArticlesRoute
  '/$username/experience': typeof appusersUsernameExperienceRoute
  '/$username': typeof appusersUsernameIndexRoute
  '/$username/connections/followers': typeof appusersUsernameConnectionsFollowersRoute
  '/$username/connections/following': typeof appusersUsernameConnectionsFollowingRoute
  '/$username/projects/$projectId': typeof appusersUsernameProjectsProjectIdRoute
  '/$username/projects': typeof appusersUsernameProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)/login': typeof authLoginRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/chats/': typeof appChatsIndexRoute
  '/(app)/explore/': typeof appExploreIndexRoute
  '/(app)/(users)/$username/connections': typeof appusersUsernameConnectionsRouteRouteWithChildren
  '/(app)/(users)/$username/articles': typeof appusersUsernameArticlesRoute
  '/(app)/(users)/$username/experience': typeof appusersUsernameExperienceRoute
  '/(app)/(users)/$username/': typeof appusersUsernameIndexRoute
  '/(app)/(users)/$username/connections/followers': typeof appusersUsernameConnectionsFollowersRoute
  '/(app)/(users)/$username/connections/following': typeof appusersUsernameConnectionsFollowingRoute
  '/(app)/(users)/$username/projects/$projectId': typeof appusersUsernameProjectsProjectIdRoute
  '/(app)/(users)/$username/projects/': typeof appusersUsernameProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/'
    | '/chats'
    | '/explore'
    | '/$username/connections'
    | '/$username/articles'
    | '/$username/experience'
    | '/$username'
    | '/$username/connections/followers'
    | '/$username/connections/following'
    | '/$username/projects/$projectId'
    | '/$username/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/chats'
    | '/explore'
    | '/$username/connections'
    | '/$username/articles'
    | '/$username/experience'
    | '/$username'
    | '/$username/connections/followers'
    | '/$username/connections/following'
    | '/$username/projects/$projectId'
    | '/$username/projects'
  id:
    | '__root__'
    | '/(auth)/login'
    | '/(app)/'
    | '/(app)/chats/'
    | '/(app)/explore/'
    | '/(app)/(users)/$username/connections'
    | '/(app)/(users)/$username/articles'
    | '/(app)/(users)/$username/experience'
    | '/(app)/(users)/$username/'
    | '/(app)/(users)/$username/connections/followers'
    | '/(app)/(users)/$username/connections/following'
    | '/(app)/(users)/$username/projects/$projectId'
    | '/(app)/(users)/$username/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authLoginRoute: typeof authLoginRoute
  appIndexRoute: typeof appIndexRoute
  appChatsIndexRoute: typeof appChatsIndexRoute
  appExploreIndexRoute: typeof appExploreIndexRoute
  appusersUsernameConnectionsRouteRoute: typeof appusersUsernameConnectionsRouteRouteWithChildren
  appusersUsernameArticlesRoute: typeof appusersUsernameArticlesRoute
  appusersUsernameExperienceRoute: typeof appusersUsernameExperienceRoute
  appusersUsernameIndexRoute: typeof appusersUsernameIndexRoute
  appusersUsernameProjectsProjectIdRoute: typeof appusersUsernameProjectsProjectIdRoute
  appusersUsernameProjectsIndexRoute: typeof appusersUsernameProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/explore/': {
      id: '/(app)/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof appExploreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/chats/': {
      id: '/(app)/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof appChatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/': {
      id: '/(app)/(users)/$username/'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof appusersUsernameIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/experience': {
      id: '/(app)/(users)/$username/experience'
      path: '/$username/experience'
      fullPath: '/$username/experience'
      preLoaderRoute: typeof appusersUsernameExperienceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/articles': {
      id: '/(app)/(users)/$username/articles'
      path: '/$username/articles'
      fullPath: '/$username/articles'
      preLoaderRoute: typeof appusersUsernameArticlesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/connections': {
      id: '/(app)/(users)/$username/connections'
      path: '/$username/connections'
      fullPath: '/$username/connections'
      preLoaderRoute: typeof appusersUsernameConnectionsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/projects/': {
      id: '/(app)/(users)/$username/projects/'
      path: '/$username/projects'
      fullPath: '/$username/projects'
      preLoaderRoute: typeof appusersUsernameProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/projects/$projectId': {
      id: '/(app)/(users)/$username/projects/$projectId'
      path: '/$username/projects/$projectId'
      fullPath: '/$username/projects/$projectId'
      preLoaderRoute: typeof appusersUsernameProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/(users)/$username/connections/following': {
      id: '/(app)/(users)/$username/connections/following'
      path: '/following'
      fullPath: '/$username/connections/following'
      preLoaderRoute: typeof appusersUsernameConnectionsFollowingRouteImport
      parentRoute: typeof appusersUsernameConnectionsRouteRoute
    }
    '/(app)/(users)/$username/connections/followers': {
      id: '/(app)/(users)/$username/connections/followers'
      path: '/followers'
      fullPath: '/$username/connections/followers'
      preLoaderRoute: typeof appusersUsernameConnectionsFollowersRouteImport
      parentRoute: typeof appusersUsernameConnectionsRouteRoute
    }
  }
}

interface appusersUsernameConnectionsRouteRouteChildren {
  appusersUsernameConnectionsFollowersRoute: typeof appusersUsernameConnectionsFollowersRoute
  appusersUsernameConnectionsFollowingRoute: typeof appusersUsernameConnectionsFollowingRoute
}

const appusersUsernameConnectionsRouteRouteChildren: appusersUsernameConnectionsRouteRouteChildren =
  {
    appusersUsernameConnectionsFollowersRoute:
      appusersUsernameConnectionsFollowersRoute,
    appusersUsernameConnectionsFollowingRoute:
      appusersUsernameConnectionsFollowingRoute,
  }

const appusersUsernameConnectionsRouteRouteWithChildren =
  appusersUsernameConnectionsRouteRoute._addFileChildren(
    appusersUsernameConnectionsRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  authLoginRoute: authLoginRoute,
  appIndexRoute: appIndexRoute,
  appChatsIndexRoute: appChatsIndexRoute,
  appExploreIndexRoute: appExploreIndexRoute,
  appusersUsernameConnectionsRouteRoute:
    appusersUsernameConnectionsRouteRouteWithChildren,
  appusersUsernameArticlesRoute: appusersUsernameArticlesRoute,
  appusersUsernameExperienceRoute: appusersUsernameExperienceRoute,
  appusersUsernameIndexRoute: appusersUsernameIndexRoute,
  appusersUsernameProjectsProjectIdRoute:
    appusersUsernameProjectsProjectIdRoute,
  appusersUsernameProjectsIndexRoute: appusersUsernameProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
